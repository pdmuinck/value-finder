version: '3'

services:
  # Backend / Database
  database:
    image: database
    build: ../backend/database
    restart: always
    volumes:
      - ../backend/database/scripts:/docker-entrypoint-initdb.d
    networks:
      - back
    environment: 
      - MYSQL_ROOT_PASSWORD=toor
  
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    build: ../backend/kafka-docker
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENERS: LISTENER_1://localhost:9092
      KAFKA_ADVERTISED_LISTENERS: LISTENER_1://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_1:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_1
      KAFKA_CREATE_TOPICS: "events:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  
  kafka-api:
    image: kafka-api
    build: ../backend/api/kafka
    restart: always
    networks:
      - front
      - back
    ports:
      - 3002:3002
  
  # Backend / Kambi Scraper
  kambi:
    image: kambi
    build: ../backend/scraper/kambi
    restart: always
    networks:
      - front
      - back
    ports:
      - 3000:3000

  sbtech:
    image: sbtech
    build: ../backend/scraper/sbtech
    restart: always
    networks:
      - front
      - back
    ports:
      - 3001:3001

networks:
  front:
    driver: bridge
  back:
    driver: bridge
  docker-network:
    driver: bridge